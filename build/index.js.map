{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/home/pgarcia/code/remix/remix-jokes/app/root.tsx", "route-module:/home/pgarcia/code/remix/remix-jokes/app/routes/index.tsx", "route-module:/home/pgarcia/code/remix/remix-jokes/app/routes/jokes.tsx", "../app/utils/db.server.ts", "route-module:/home/pgarcia/code/remix/remix-jokes/app/routes/jokes/$jokeId.tsx", "route-module:/home/pgarcia/code/remix/remix-jokes/app/routes/jokes/index.tsx", "route-module:/home/pgarcia/code/remix/remix-jokes/app/routes/jokes/new.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/home/pgarcia/code/remix/remix-jokes/app/entry.server.tsx\";\nimport * as route0 from \"/home/pgarcia/code/remix/remix-jokes/app/root.tsx\";\nimport * as route1 from \"/home/pgarcia/code/remix/remix-jokes/app/routes/index.tsx\";\nimport * as route2 from \"/home/pgarcia/code/remix/remix-jokes/app/routes/jokes.tsx\";\nimport * as route3 from \"/home/pgarcia/code/remix/remix-jokes/app/routes/jokes/$jokeId.tsx\";\nimport * as route4 from \"/home/pgarcia/code/remix/remix-jokes/app/routes/jokes/index.tsx\";\nimport * as route5 from \"/home/pgarcia/code/remix/remix-jokes/app/routes/jokes/new.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/jokes\": {\n    id: \"routes/jokes\",\n    parentId: \"root\",\n    path: \"jokes\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/jokes/$jokeId\": {\n    id: \"routes/jokes/$jokeId\",\n    parentId: \"routes/jokes\",\n    path: \":jokeId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/jokes/index\": {\n    id: \"routes/jokes/index\",\n    parentId: \"routes/jokes\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/jokes/new\": {\n    id: \"routes/jokes/new\",\n    parentId: \"routes/jokes\",\n    path: \"new\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import type { LinksFunction } from \"remix\";\nimport { Links, LiveReload, Outlet } from \"remix\";\n\nimport globalStylesUrl from \"./styles/global.css\";\nimport globalMediumStylesUrl from \"./styles/global-medium.css\";\nimport globalLargeStylesUrl from \"./styles/global-large.css\";\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: globalStylesUrl\n    },\n    {\n      rel: \"stylesheet\",\n      href: globalMediumStylesUrl,\n      media: \"print, (min-width: 640px)\"\n    },\n    {\n      rel: \"stylesheet\",\n      href: globalLargeStylesUrl,\n      media: \"screen and (min-width: 1024px)\"\n    }\n  ];\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <title>Remix: So great, it's funny!</title>\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        {process.env.NODE_ENV === \"development\" ? (\n          <LiveReload />\n        ) : null}\n      </body>\n    </html>\n  );\n}", "import type { LinksFunction } from \"remix\";\nimport { Link } from \"remix\";\nimport stylesUrl from \"../styles/index.css\";\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: stylesUrl\n    }\n  ];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1>\n          Remix <span>Jokes!</span>\n        </h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"jokes\">Read Jokes</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}", "import { LinksFunction, LoaderFunction } from \"remix\";\nimport { Link, Outlet, useLoaderData } from \"remix\";\nimport { db } from \"~/utils/db.server\";\nimport stylesUrl from \"../styles/jokes.css\";\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: stylesUrl\n    }\n  ];\n};\n\ntype LoaderData = {\n  jokeListItems: Array<{ id: string; name: string }>;\n};\n\nexport let loader: LoaderFunction = async () => {\n  let data: LoaderData = {\n    jokeListItems: await db.joke.findMany()\n  };\n  return data;\n};\n\nexport default function JokesRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div className=\"jokes-layout\">\n      <header className=\"jokes-header\">\n        <div className=\"container\">\n          <h1 className=\"home-link\">\n            <Link\n              to=\"/\"\n              title=\"Remix Jokes\"\n              aria-label=\"Remix Jokes\"\n            >\n              <span className=\"logo\">\uD83E\uDD2A</span>\n              <span className=\"logo-medium\">J\uD83E\uDD2AKES</span>\n            </Link>\n          </h1>\n        </div>\n      </header>\n      <main className=\"jokes-main\">\n        <div className=\"container\">\n          <div className=\"jokes-list\">\n            <Link to=\".\">Get a random joke</Link>\n            <p>Here are a few more jokes to check out:</p>\n            <ul>\n              {data.jokeListItems.map(joke => (\n                <li key={joke.id}>\n                  <Link to={joke.id}>{joke.name}</Link>\n                </li>\n              ))}\n            </ul>\n            <Link to=\"new\" className=\"button\">\n              Add your own\n            </Link>\n          </div>\n          <div className=\"jokes-outlet\">\n            <Outlet />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n  db.$connect();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n    global.__db.$connect();\n  }\n  db = global.__db;\n}\n\nexport { db };", "export default function JokeRoute() {\n    return (\n      <div>\n        <p>Here's your hilarious joke:</p>\n        <p>\n          Why don't you find hippopotamuses hiding in trees?\n          They're really good at it.\n        </p>\n      </div>\n    );\n  }", "export default function JokesIndexRoute() {\n    return (\n      <div>\n        <p>Here's a random joke:</p>\n        <p>\n          I was wondering why the frisbee was getting bigger,\n          then it hit me.\n        </p>\n      </div>\n    );\n  }", "export default function NewJokeRoute() {\n    return (\n      <div>\n        <p>Add your own hilarious joke</p>\n        <form method=\"post\">\n          <div>\n            <label>\n              Name: <input type=\"text\" name=\"name\" />\n            </label>\n          </div>\n          <div>\n            <label>\n              Content: <textarea name=\"content\" />\n            </label>\n          </div>\n          <div>\n            <button type=\"submit\" className=\"button\">\n              Add\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }"],
  "mappings": "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",
  "names": []
}
